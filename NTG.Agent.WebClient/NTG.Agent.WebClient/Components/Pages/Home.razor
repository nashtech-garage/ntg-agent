@page "/"
@rendermode InteractiveServer

@inject ChatClient ChatClient;

<PageTitle>Home</PageTitle>

<div class="mt-4">
    <h2>Let's Chat</h2>
    @foreach (var item in chatHistory)
    {
        if (item.IsSystem)
        {
            <div>
                <Markdown IsViewer="true" Value="@item.Message" @ref="MarkdownSetValue"></Markdown>
            </div>
        }
        else
        {
            <div class="text-end">@item.Message</div>
        }
    }
</div>
<div class="form-group text-end">
    <label for="userInput">Type your message:</label>
    <input type="text" id="userInput" class="form-control" @bind="userInput" @onkeydown="@Enter" @bind:event="oninput" />
    <button class="btn btn-primary mt-2" @onclick="SendMessage">Send</button>
</div>


@code {
    private string userInput = string.Empty;
    private List<ChatMessage> chatHistory = new List<ChatMessage>();
    private BootstrapBlazor.Components.Markdown? MarkdownSetValue { get; set; }

    private async Task SendMessage()
    {
        if (!string.IsNullOrWhiteSpace(userInput))
        {
            chatHistory.Add(new ChatMessage { IsSystem = false, Message = userInput });

            var response = new ChatMessage { IsSystem = true, Message = "Agent:" };
            chatHistory.Add(response);
            StateHasChanged();
       
            var result = await ChatClient.InvokeStreamAsync(new PromptRequest(userInput));
            userInput = string.Empty;

            await foreach (var item in result)
            {                
                response.Message += item.Content;
                await Task.Delay(1);
                await MarkdownSetValue!.SetValue(response.Message);            
            }            
        }
    }

    public async Task Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            await SendMessage();
        }
    }

    class ChatMessage
    {
        public bool IsSystem { get; set; }
        public string Message { get; set; } = string.Empty;
    }
}
